scalar Date

type Tarjeta
{
    id: ID!
    codigo: String!
    saldo: Float!
    fechaAlta: Date!
    usuario: Usuario!
}

type ResultadoMutacionTarjeta
{
    mensaje: String!
    tarjeta: Tarjeta
}

type Query
{
    traerTarjetaPorId(id: ID!): Tarjeta
    traerPorCodigo(codigo: String!): Tarjeta
    traerTarjetaPorDniUsuario(dni: Float!): Tarjeta
    traerTarjetas: [Tarjeta]
    traerTarjetasConSaldoEntreRangos(minimo: Float!, maximo: Float!): [Tarjeta]
    traerTarjetasEntreFechas(fechaDesde: Date!, fechaHasta: Date!): [Tarjeta]
}

type Mutation
{
    agregarTarjeta(codigo: String!, saldo: Float!, fechaAlta: Date!, dni: Float!): ResultadoMutacionTarjeta!
    agregarSaldoTarjeta(id: ID!, saldo: Float!): ResultadoMutacionTarjeta!
    eliminarTarjeta(id: ID!): String!
    modificarTarjeta(id: ID!, codigo: String, saldo: Float): ResultadoMutacionTarjeta!
}